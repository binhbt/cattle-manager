apply from: 'buildsystem/ci.gradle'
apply from: 'buildsystem/dependencies.gradle'

buildscript {
  repositories {
    jcenter()
    mavenCentral()
    maven { url 'https://maven.fabric.io/public' }
  }
  dependencies {
    classpath "io.realm:realm-gradle-plugin:0.88.2"
    /*
    classpath 'com.android.tools.build:gradle:1.5.0'
    classpath 'com.neenbedankt.gradle.plugins:android-apt:1.4'
    classpath "com.fernandocejas.frodo:frodo-plugin:0.8.1"
    classpath 'me.tatarka:gradle-retrolambda:3.2.3'
    */
    classpath 'com.android.tools.build:gradle:2.0.0-beta6'
    classpath 'com.google.gms:google-services:2.0.0-beta6'
    classpath 'com.github.triplet.gradle:play-publisher:1.1.4'
    classpath 'com.neenbedankt.gradle.plugins:android-apt:1.8'
    //noinspection GradleDynamicVersion
    classpath 'io.fabric.tools:gradle:1.+'
    classpath 'me.tatarka:gradle-retrolambda:3.2.3'

    classpath "com.fernandocejas.frodo:frodo-plugin:0.8.1"
  }
}

allprojects {
  ext {
    androidApplicationId = 'com.innovatube.catalyst.presentation'
    androidVersionCode = 1
    androidVersionName = "1.0"
    testInstrumentationRunner = "android.support.test.runner.AndroidJUnitRunner"
    testApplicationId = 'com.innovatube.catalyst.presentation.test'
  }
  repositories {
    jcenter()
    maven { url 'https://maven.fabric.io/public' }
  }
}

task wrapper(type: Wrapper) {
  description 'Creates the gradle wrapper.'
  gradleVersion '2.10'
}

task runDomainUnitTests(dependsOn: [':domain:test']) {
  description 'Run unit tests for the domain layer.'
}

task runDataUnitTests(dependsOn: [':data:cleanTestDebugUnitTest', ':data:testDebugUnitTest']) {
  description 'Run unit tests for the data layer.'
}

task runUnitTests(dependsOn: ['runDomainUnitTests', 'runDataUnitTests']) {
  description 'Run unit tests for both domain and data layers.'
}

task runAcceptanceTests(dependsOn: [':presentation:connectedAndroidTest']) {
  description 'Run application acceptance tests.'
}

